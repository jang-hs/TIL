(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{348:function(s,t,e){"use strict";e.r(t);var a=e(27),n=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"kubernetes의-probe-알아보기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes의-probe-알아보기"}},[s._v("#")]),s._v(" Kubernetes의 Probe 알아보기")]),s._v(" "),t("p",[s._v("쿠버네티스(Kubernetes)에서 프로브(Probe)는 애플리케이션 컨테이너의 상태를 점검하는 메커니즘입니다. 프로브는 주로 헬스 체크에 사용되며, 이를 통해 쿠버네티스가 애플리케이션의 상태를 모니터링하고 적절한 조치를 취할 수 있습니다. 쿠버네티스에서 지원하는 주요 프로브는 다음과 같습니다:")]),s._v(" "),t("ul",[t("li",[s._v("Liveness Probe: 생존 여부를 확인하며, 실패 시 컨테이너 재시작.")]),s._v(" "),t("li",[s._v("Readiness Probe: 준비 상태를 확인하며, 실패 시 트래픽 차단.")]),s._v(" "),t("li",[s._v("Startup Probe: 시작 완료 여부를 확인하며, Liveness/Readiness Probe의 실행을 지연.")])]),s._v(" "),t("h2",{attrs:{id:"liveness-probe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#liveness-probe"}},[s._v("#")]),s._v(" Liveness Probe")]),s._v(" "),t("p",[t("strong",[s._v("역할:")]),s._v(" 컨테이너가 정상적으로 작동 중인지 확인.")]),s._v(" "),t("ul",[t("li",[s._v("실패하면 컨테이너를 재시작.")]),s._v(" "),t("li",[s._v("주로 "),t("strong",[s._v("애플리케이션이 고장난 상태에서 복구 불가능할 경우")]),s._v("를 감지하기 위해 사용.")]),s._v(" "),t("li",[s._v("예: 애플리케이션이 데드락 상태에 빠졌거나, 응답하지 않는 상태.")])]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("livenessProbe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("httpGet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /healthz\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("initialDelaySeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])])]),t("h2",{attrs:{id:"readiness-probe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#readiness-probe"}},[s._v("#")]),s._v(" Readiness Probe")]),s._v(" "),t("p",[t("strong",[s._v("역할:")]),s._v(" 컨테이너가 요청을 처리할 준비가 되었는지 확인.")]),s._v(" "),t("ul",[t("li",[s._v("실패하면 해당 컨테이너로 트래픽을 전달하지 않음.")]),s._v(" "),t("li",[s._v("주로 애플리케이션 초기화나 의존 서비스가 준비될 때까지 대기하기 위해 사용.")]),s._v(" "),t("li",[s._v("Liveness와 달리 컨테이너를 재시작하지는 않음.")])]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("readinessProbe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tcpSocket")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("initialDelaySeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])])]),t("h2",{attrs:{id:"startup-probe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#startup-probe"}},[s._v("#")]),s._v(" Startup Probe")]),s._v(" "),t("p",[t("strong",[s._v("역할:")]),s._v(" 애플리케이션이 완전히 시작되었는지 확인.")]),s._v(" "),t("ul",[t("li",[s._v("Readiness와 Liveness의 역할을 대체하지 않지만, "),t("strong",[s._v("시작이 느린 애플리케이션을 처리")]),s._v("하는 데 유용.")]),s._v(" "),t("li",[s._v("Startup Probe가 성공하기 전에는 Liveness와 Readiness가 실행되지 않음.")])]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("startupProbe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" cat\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /tmp/ready\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("initialDelaySeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("failureThreshold")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])])]),t("h2",{attrs:{id:"프로브의-설정-구성"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#프로브의-설정-구성"}},[s._v("#")]),s._v(" 프로브의 설정 구성")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("동작 유형")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("httpGet")]),s._v(": HTTP 요청을 보내 상태 확인.")]),s._v(" "),t("li",[t("code",[s._v("tcpSocket")]),s._v(": 특정 포트에서 TCP 연결 가능 여부 확인.")]),s._v(" "),t("li",[t("code",[s._v("exec")]),s._v(": 컨테이너 내에서 특정 명령어를 실행하고 종료 코드를 확인.")])])]),s._v(" "),t("li",[t("strong",[s._v("주요 파라미터")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("initialDelaySeconds")]),s._v(": 프로브 시작 전 대기 시간.")]),s._v(" "),t("li",[t("code",[s._v("periodSeconds")]),s._v(": 프로브 주기.")]),s._v(" "),t("li",[t("code",[s._v("timeoutSeconds")]),s._v(": 프로브 응답 타임아웃.")]),s._v(" "),t("li",[t("code",[s._v("failureThreshold")]),s._v(': 실패를 몇 번 연속으로 감지하면 상태를 "비정상"으로 판단할지 설정.')]),s._v(" "),t("li",[t("code",[s._v("successThreshold")]),s._v(': 몇 번 연속 성공하면 상태를 "정상"으로 판단할지 설정 (주로 Readiness Probe에 사용).')])])])]),s._v(" "),t("h2",{attrs:{id:"프로브-활용-시-주의점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#프로브-활용-시-주의점"}},[s._v("#")]),s._v(" 프로브 활용 시 주의점")]),s._v(" "),t("ul",[t("li",[s._v("Startup Probe는 느린 초기화를 처리할 때만 필요하며, 설정하지 않으면 Liveness Probe가 초기화 과정에서 불필요하게 재시작을 유발할 수 있습니다.")]),s._v(" "),t("li",[s._v("Readiness Probe는 애플리케이션 초기화뿐만 아니라 외부 의존성(예: 데이터베이스 연결 상태)을 확인하는 데도 적합합니다.")]),s._v(" "),t("li",[s._v("Liveness Probe는 애플리케이션의 고장 상태를 신속히 감지하고 복구하는 데 중요한 역할을 합니다.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);