(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{354:function(t,a,e){"use strict";e.r(a);var s=e(27),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"limitrange와-resourcequota"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limitrange와-resourcequota"}},[t._v("#")]),t._v(" LimitRange와 ResourceQuota")]),t._v(" "),a("p",[t._v("쿠버네티스 환경에서 리소스를 효율적으로 관리하지 않으면, 특정 Pod나 네임스페이스가 클러스터 자원을 독점하여 다른 워크로드에 영향을 줄 수 있습니다.\nLimitRange와 ResourceQuota는 이러한 상황을 예방하기 위한 두 가지 핵심 메커니즘입니다.")]),t._v(" "),a("h2",{attrs:{id:"_1-limitrange-pod-컨테이너-수준의-리소스-가이드라인"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-limitrange-pod-컨테이너-수준의-리소스-가이드라인"}},[t._v("#")]),t._v(" 1. LimitRange: Pod/컨테이너 수준의 리소스 가이드라인")]),t._v(" "),a("h3",{attrs:{id:"_1-1-limitrange가-필요한-이유"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-limitrange가-필요한-이유"}},[t._v("#")]),t._v(" 1-1. LimitRange가 필요한 이유")]),t._v(" "),a("p",[t._v("Pod 스펙에 "),a("code",[t._v("requests")]),t._v("와 "),a("code",[t._v("limits")]),t._v("를 지정하지 않으면 쿠버네티스 스케줄러는 자원의 요구량을 0으로 인식해 노드에 무분별하게 스케줄링할 수 있습니다. 이는 노드 리소스를 고갈시키고, 다른 Pod가 제때 스케줄되지 못하는 문제를 유발할 수 있습니다.")]),t._v(" "),a("h3",{attrs:{id:"_1-2-admission-controller와의-관계"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-admission-controller와의-관계"}},[t._v("#")]),t._v(" 1-2. Admission Controller와의 관계")]),t._v(" "),a("p",[t._v("LimitRange는 "),a("code",[t._v("LimitRanger")]),t._v(" Admission Controller에 의해 적용됩니다.\nPod이 API 서버로 제출될 때:")]),t._v(" "),a("ol",[a("li",[t._v("Pod 스펙에 요청/제한 값이 없으면 defaultRequest 및 default 값으로 자동 보정됩니다.")]),t._v(" "),a("li",[t._v("요청값이 최소(min) 또는 최대(max) 범위를 벗어나면 유효성 검사에서 실패합니다.")])]),t._v(" "),a("h3",{attrs:{id:"_1-3-limitrange와-qos-클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-limitrange와-qos-클래스"}},[t._v("#")]),t._v(" 1-3. LimitRange와 QoS 클래스")]),t._v(" "),a("p",[t._v("LimitRange는 쿠버네티스 QoS(Quality of Service) 클래스에도 직접적인 영향을 미칩니다:")]),t._v(" "),a("ul",[a("li",[t._v("Guaranteed: 모든 컨테이너가 "),a("code",[t._v("request=limit")]),t._v(" 설정.")]),t._v(" "),a("li",[t._v("Burstable: request < limit.")]),t._v(" "),a("li",[t._v("BestEffort: request/limit 미설정(→ LimitRange로 최소 보정 가능).")])]),t._v(" "),a("p",[t._v("QoS 클래스는 Pod OOM(Out-Of-Memory) 발생 시 eviction 우선순위를 결정하므로, LimitRange는 QoS 설계에도 중요한 역할을 합니다.")]),t._v(" "),a("h2",{attrs:{id:"_2-resourcequota-네임스페이스-자원의-상한선"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-resourcequota-네임스페이스-자원의-상한선"}},[t._v("#")]),t._v(" 2. ResourceQuota: 네임스페이스 자원의 상한선")]),t._v(" "),a("h3",{attrs:{id:"_2-1-resourcequota-컨트롤러"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-resourcequota-컨트롤러"}},[t._v("#")]),t._v(" 2-1. ResourceQuota 컨트롤러")]),t._v(" "),a("p",[t._v("ResourceQuota는 네임스페이스 전체의 리소스 사용량을 추적하기 위해 "),a("code",[t._v("ResourceQuota Controller")]),t._v("를 사용합니다.")]),t._v(" "),a("ul",[a("li",[t._v("Pod이나 PVC가 생성될 때 현재 사용량(usage)을 조회하고, "),a("code",[t._v("hard")]),t._v("에 정의된 한도를 초과하면 API 서버가 "),a("code",[t._v("Forbidden")]),t._v(" 에러를 반환합니다.")]),t._v(" "),a("li",[t._v("LimitRange가 없으면 Pod의 request가 0으로 계산되어 ResourceQuota가 실질적으로 동작하지 않을 수 있음.")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-트래픽-폭주-방지"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-트래픽-폭주-방지"}},[t._v("#")]),t._v(" 2-2. 트래픽 폭주 방지")]),t._v(" "),a("p",[t._v("실서비스에서는 특정 팀/서비스가 스케일 아웃 시 수십 개 Pod을 동시에 생성할 수 있습니다. ResourceQuota는 이러한 트래픽 폭주를 방지하여 클러스터 안정성을 확보합니다.")]),t._v(" "),a("h2",{attrs:{id:"_3-limitrange-vs-resourcequota-내부-동작-차이"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-limitrange-vs-resourcequota-내부-동작-차이"}},[t._v("#")]),t._v(" 3. LimitRange vs ResourceQuota: 내부 동작 차이")]),t._v(" "),a("p",[t._v("| 항목              | LimitRange                          | ResourceQuota         |\n|  |  | - |\n| 적용 범위       | Pod/컨테이너 단위                             | 네임스페이스 전체                 |\n| 검증 시점       | Admission Controller 단계 ("),a("code",[t._v("LimitRanger")]),t._v(") | Quota Controller에서 사용량 검증 |\n| 주요 목적       | 합리적인 리소스 요청 강제                          | 네임스페이스별 자원 독점 방지          |\n| QoS 클래스에 영향 | O (defaultRequest/limit으로 결정)           | X                         |")]),t._v(" "),a("h2",{attrs:{id:"_4-실무-설계-패턴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-실무-설계-패턴"}},[t._v("#")]),t._v(" 4. 실무 설계 패턴")]),t._v(" "),a("h3",{attrs:{id:"_4-1-개발-테스트-vs-운영-환경"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-개발-테스트-vs-운영-환경"}},[t._v("#")]),t._v(" 4-1. 개발/테스트 vs 운영 환경")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("개발/테스트:")]),t._v(" "),a("ul",[a("li",[t._v("LimitRange로 작은 defaultRequest 설정 (ex: "),a("code",[t._v("cpu=100m")]),t._v(", "),a("code",[t._v("memory=128Mi")]),t._v(").")]),t._v(" "),a("li",[t._v("ResourceQuota로 네임스페이스 CPU/메모리를 제한 (ex: "),a("code",[t._v("requests.cpu=1")]),t._v(", "),a("code",[t._v("limits.memory=2Gi")]),t._v(").")])])]),t._v(" "),a("li",[a("p",[t._v("운영 환경:")]),t._v(" "),a("ul",[a("li",[t._v("서비스별로 충분한 리소스를 보장 ("),a("code",[t._v("request=limit")]),t._v(" 설정으로 Guaranteed QoS 확보).")]),t._v(" "),a("li",[t._v("ResourceQuota를 느슨하게 설정하되, 팀 단위로 명확히 구분.")])])])]),t._v(" "),a("h3",{attrs:{id:"_4-2-헬름-helm-기반-템플릿화"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-헬름-helm-기반-템플릿화"}},[t._v("#")]),t._v(" 4-2. 헬름(Helm) 기반 템플릿화")]),t._v(" "),a("p",[t._v("운영 시 팀별 네임스페이스에 동일한 패턴을 적용하기 위해 LimitRange + ResourceQuota를 Helm Chart로 묶어 배포하면 관리가 용이합니다.")]),t._v(" "),a("h2",{attrs:{id:"_5-운영-시-발생할-수-있는-문제와-해결책"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-운영-시-발생할-수-있는-문제와-해결책"}},[t._v("#")]),t._v(" 5. 운영 시 발생할 수 있는 문제와 해결책")]),t._v(" "),a("h3",{attrs:{id:"문제-1-pod-스케줄-실패-insufficient-cpu-memory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#문제-1-pod-스케줄-실패-insufficient-cpu-memory"}},[t._v("#")]),t._v(" 문제 1: Pod 스케줄 실패 (Insufficient CPU/Memory)")]),t._v(" "),a("ul",[a("li",[t._v("원인: ResourceQuota가 request 값을 초과하거나, LimitRange의 max 제한으로 Pod이 생성 거부.")]),t._v(" "),a("li",[t._v("해결: "),a("code",[t._v("kubectl describe quota")]),t._v(", "),a("code",[t._v("kubectl describe limitrange")]),t._v(" 명령어로 원인 분석.")])]),t._v(" "),a("h3",{attrs:{id:"문제-2-qos-클래스-besteffort로-인한-eviction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#문제-2-qos-클래스-besteffort로-인한-eviction"}},[t._v("#")]),t._v(" 문제 2: QoS 클래스 BestEffort로 인한 Eviction")]),t._v(" "),a("ul",[a("li",[t._v("원인: LimitRange 미적용 시 request=0 → BestEffort로 스케줄됨.")]),t._v(" "),a("li",[t._v("해결: LimitRange를 통해 request 최소값 설정.")])]),t._v(" "),a("h3",{attrs:{id:"문제-3-pvc-초과-생성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#문제-3-pvc-초과-생성"}},[t._v("#")]),t._v(" 문제 3: PVC 초과 생성")]),t._v(" "),a("ul",[a("li",[t._v("ResourceQuota에 PVC 수를 제한하지 않으면, 과도한 볼륨 사용 가능.")]),t._v(" "),a("li",[t._v("해결: "),a("code",[t._v("persistentvolumeclaims")]),t._v(" 필드를 반드시 관리.")])]),t._v(" "),a("h2",{attrs:{id:"_6-limitrange-resourcequota-실전-yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-limitrange-resourcequota-실전-yaml"}},[t._v("#")]),t._v(" 6. LimitRange + ResourceQuota 실전 YAML")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# LimitRange")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" LimitRange\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("limits\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" team"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Container\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaultRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200m\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 256Mi\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 400m\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 512Mi\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100m\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 128Mi\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ResourceQuota")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ResourceQuota\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" namespace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("quota\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" team"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests.cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests.memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 8Gi\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits.cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits.memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 12Gi\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentvolumeclaims")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),t._v("\n")])])]),a("h2",{attrs:{id:"_7-실무-tip-설계-체크리스트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-실무-tip-설계-체크리스트"}},[t._v("#")]),t._v(" 7. 실무 TIP: 설계 체크리스트")]),t._v(" "),a("ol",[a("li",[t._v("LimitRange의 defaultRequest 값은 노드 리소스를 고려해 현실적인 값으로 설정.")]),t._v(" "),a("li",[t._v("ResourceQuota 값은 팀별/네임스페이스별 리소스 할당량과 매칭.")]),t._v(" "),a("li",[t._v("QoS 클래스(Guaranteed vs Burstable)를 의도적으로 관리하여 OOM 및 eviction 우선순위 제어.")]),t._v(" "),a("li",[a("code",[t._v("kubectl describe quota")]),t._v("와 "),a("code",[t._v("kubectl describe limitrange")]),t._v("로 지속적으로 상태 점검.")]),t._v(" "),a("li",[t._v("Prometheus로 ResourceQuota 사용량을 모니터링해 초과 위험 시 Alert.")])]),t._v(" "),a("h2",{attrs:{id:"_8-마무리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-마무리"}},[t._v("#")]),t._v(" 8. 마무리")]),t._v(" "),a("p",[t._v("LimitRange와 ResourceQuota는 단순한 리소스 제한 도구가 아니라, 클러스터 리소스 전략의 핵심입니다.")]),t._v(" "),a("ul",[a("li",[t._v("LimitRange → Pod 단위 리소스 품질 보장 (QoS 클래스 제어)")]),t._v(" "),a("li",[t._v("ResourceQuota → 네임스페이스별 공평한 자원 분배")])]),t._v(" "),a("p",[t._v("두 메커니즘을 함께 사용하면 안정적이고 예측 가능한 클러스터 운영이 가능합니다.")])])}),[],!1,null,null,null);a.default=r.exports}}]);